---
title: "Genetic diversity analises"
format: 
  html:
    page-layout: full
self-contained: true
fig-width: 11
fig-height: 9
execute: 
  warning: false
---

```{r}
#| echo: false
#| warning: false
library(flextable)

# Defaults para tablas de resultados
set_flextable_defaults(
  font.size = 10, 
  theme_fun = theme_zebra,
  padding = 6,
  font.family = "Roboto")
```


## Objetivos

Descriptivos:
    - Número de muestras por sitio de muestreo
    - Número de alelos 
    - Alelos rarefacción 
    - Diversidad génica (hs) por población
    - Diversidad génica por especie

Estructura genética 
    - Fst?
    - AMOVA (entre especies, entre poblaciones dentro de las especies) - PHIst 

Estructura filogeográfica 
    - Gst vs Nst

Red de haplotipos 


## Datos

```{r}
library(adegenet)
library(googlesheets4)
library(tidyverse)
library(hierfstat)

# Cargar los datos en adegenet

df = read_sheet("https://docs.google.com/spreadsheets/d/1TuepHgDTVpBpM4PaWOm3fZCqwoQWpmTCRvU24AWT7B0/edit?usp=sharing", sheet = 1, col_type = "cccddiiiiiiii")

#df = read.csv("../data/TRES ESPJUNTAS FILOGENPOP - TRES ESPJUNTAS FILOGENPOP.csv", header = T) 

genind = df %>% 
        select(starts_with("locus")) %>% 
        df2genind(X = ., ploidy = 1, sep = "")

genind@pop = as.factor(str_remove(df$pop,"pop"))
genind@strata = df[,c(1,3)] %>% mutate(pop = str_remove(df$pop,"pop"))

genind@other = df[,c(1,2,4,5)]

gind_list = list(hy = genind[which(genind@strata$Species == "Quercus hypoleucoides")], 
                si =  genind[which(genind@strata$Species == "Quercus scytophylla")],
                sy = genind[which(genind@strata$Species == "Quercus sideroxyla")])
names(gind_list) = unique(df$Species)

```

### Mapa muestras 
```{r}
#| fig-width: 15

Mexico <- map_data(map = "world", region = "mexico")

map = ggplot()+
    geom_polygon(data = Mexico, aes(x = long, y = lat, group = group))+
    geom_point(data = genind@other, aes(x = lon, y = lat, color = Species))
map
```

## Descriptivos: Diversidad genética

```{r}
library(officer)
library(tibble)
library(tidyr)
library(gtools)


# summary adegenet
sum_ade = summary(genind)

# basic stats hierfstat (per locus and overall)

hfstat_all <- genind2hierfstat(genind)

basicstat <- basic.stats(hfstat_all, diploid = FALSE, digits = 2) 


per_loc = cbind(Locus = rownames(basicstat$perloc),basicstat$perloc[,which(colnames(basicstat$perloc) %in% c("Hs","Ht"))], n_alleles = sum_ade$loc.n.all) %>% mutate(Locus = str_remove(Locus,"locus_"))

flextable(per_loc) %>% 
    set_header_labels(n_alleles = "Número de\nalelos") %>%
    align( part = "all", align = "center")


# lista de formatos de hierfstat por especie
hfstat_list = lapply(gind_list, genind2hierfstat)
names(hfstat_list) = unique(df$Species)

basicstat_sp = lapply(hfstat_list, function(x) basic.stats(x,diploid = F,digits = 2))

overall_sp = lapply(seq_along(basicstat_sp), 
        function(x){data.frame(value = basicstat_sp[[x]]$overall) %>%
                                 rownames_to_column(var = "var") %>%
                                 mutate(sp = names(basicstat_sp[x]))}) %>% 
    do.call(rbind,.) %>% 
    pivot_wider(id_cols = sp, names_from = var, values_from = value)

# Per species 
overall_sp %>% 
    flextable(.,col_keys = c("sp","Hs","Ht","Fst")) %>% 
    add_footer_row(.,values = c("Total",basicstat$overall[c("Hs","Ht","Fst")]), colwidths = c(1,1,1,1))%>%
    align(j = 2:4, part = "footer",align = "right") %>%
    bold(j = 1:4, part = "footer") %>%
    italic(j = 1, i = 1:3, part = "body") %>%
    set_header_labels(sp = "Especie")


# Hs per population
hs = Hs(hfstat_all)

library(poppr)
# Medidas de diversidad aplicadas a genética 
stats_pop = poppr(genind, minsamp = 8)

strata = unique(strata(genind)) %>% mutate(pop = as.numeric(pop))

border = fp_border(color="black", width = 1)

data.frame(pop = as.numeric(names(hs)),
           hs = format(hs, digits = 3),
           Ar = stats_pop$eMLG[-length(stats_pop$eMLG)],
           s.e.Ar = stats_pop$SE[-length(stats_pop$eMLG)]) %>%
    arrange(pop) %>% 
    left_join(strata, by = "pop") %>%
    flextable(col_keys = c("Species","pop","hs","Ar","s.e.Ar")) %>%
    merge_v(j = ~Species) %>%
    hline(i = c(14,35,51), part = "body", border = border) %>%
    hline_bottom(part = "all", border = border) %>%
    align(part = "all", align = "center")%>%
    set_header_labels(Species = "Especie",
                        pop = "Población",
                        hs = "Hs")

```


```{r}
#| eval: false
library(mmod)

diff_stats_all <- diff_stats(genind)
diff_stats_all

diff_stats_sp = lapply(gind_list,diff_stats)
diff_stats_sp

#set.seed(20151219) # Be sure to set a seed for any random analysis!
reps <- chao_bootstrap(genind, nreps = 10)
summarise_bootstrap(reps,  diff_stats) 

nei = nei.dist(genind)


## polysat 

library(polysat)

# Preparar formato genambig
gen = genind
gendf <- genind2df(gen, sep = "/", usepop = FALSE)
gendf <- lapply(gendf, lapply, as.numeric)
ambig <- new("genambig", samples = indNames(gen), loci = locNames(gen))

for (i in 1:length(names(gendf))){
    j = names(gendf)[i]
    res <- lapply(gendf[[j]], function(x) ifelse(is.na(x), Missing(ambig), x))
    Genotypes(ambig, loci = i) <- res
  }

Ploidies(ambig) = rep(1,8)
PopNames(ambig) = as.character(levels(genind@pop))
PopInfo(ambig) = as.character(genind@pop)
Usatnts(ambig) = c(1,1,1,1,1,1,1,1)

bootGst = calcPopDiff(simpleFreq(ambig), metric = "Gst", global = T, bootstrap = T)
quantile(bootGst, c(0.025, 0.975))

write.SPAGeDi(ambig, file = "spagedi.txt")


```

## Estructura genética 


```{r}

library("poppr")
res <- poppr.amova(genind, ~  Species/pop, within = FALSE)
res
set.seed(98750)
randtest(res, nrepet = 999)

```


## Red de haplotipos


```{r}
library(poppr)
dist = bitwise.dist(genind)
setPop(genind) <- ~Species
#net = bruvo.msn(genind)

#bruvo.msn(genind, replen = rep(2, 51), vertex.label="inds", 
#               vertex.label.cex=0.7, vertex.label.dist=0.4)

poppr.msn(genind, dist, vertex.label = NA)
```


```{r}
library(pegas)
library(ggraph)
library(igraph)


loc = as.loci(genind)

h = pegas::haplotype(loc, locus = 1:8)

dist = dist.haplotype.loci(h)

nt = rmst(dist)

igraph = as.igraph.haploNet(nt)


plot(nt, threshold = c(1,10), size = attr(nt, "weight"), fast = TRUE)

```



```{r}
#| eval: false

ind = as.data.frame(loc)
ind$hap = 0

list = as.data.frame(h[1:8,1:110])

i = 1
for(i in 1:ncol(list)){

    t = apply(ind[,-c(1,10)],1,function(x) {all(x == list[,i])})
    ind$hap[which(t)] = i
}

strata = df[,c(1,3)] %>% mutate(pop = str_remove(df$pop,"pop")) %>% distinct()

freq = ind[,c(1,10)] %>% 
        left_join(strata,by = c("population" = "pop")) %>% 
        select(-population) %>%
        group_by(hap,Species) %>% 
        mutate(Freq = n()) %>% distinct() %>%  ungroup %>%
        pivot_wider(id_cols = c(hap), names_from = Species, values_from = Freq, values_fill = 0) %>% 
        mutate(`Quercus hypoleucoides` = `Quercus hypoleucoides`/sum(`Quercus hypoleucoides`,`Quercus scytophylla`,`Quercus sideroxyla`),
                `Quercus scytophylla` = `Quercus scytophylla`/sum(`Quercus hypoleucoides`,`Quercus scytophylla`,`Quercus sideroxyla`),
                `Quercus sideroxyla` = `Quercus sideroxyla`/sum(`Quercus hypoleucoides`,`Quercus scytophylla`,`Quercus sideroxyla`),
                hap = as.character(hap)) 

```


```{r}
#| eval: false

igraph = igraph %>% igraph::as_data_frame(., 'both') 

igraph[[1]] = igraph[[1]] %>% left_join(freq,by = c("name" = "hap"))

f = graph_from_data_frame(igraph$edges,directed = F,vertices = igraph$vertices) %>% ggraph(.) + 
  geom_edge_link() + 
  geom_node_point(aes(color = `Quercus hypoleucoides` > 0)) +
  geom_node_text(aes(label = name), repel=TRUE)+
  theme_graph()


f$data %>% left_join(distinct(),by = c("name" = "hap"))
data = freq, aes(color = Species, size = Freq)
```